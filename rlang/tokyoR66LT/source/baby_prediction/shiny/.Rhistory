library(tidyverse)
library(RSQLite)
library(DBI)
library(readr)
install.packages(tidyverse)
install.packages(RSQLite)
install.packages(DBI)
install.packages(readr)
install.packages("tidyverse")
install.packages("RSQLite")
install.packages("DBI")
install.packages("readr")
library(tidyverse)
library(RSQLite)
library(DBI)
library(readr)
library(tidyverse)
install.packages("tidyverse")
install.packages("needs")
install.packages("readxl")
install.packages("readxl"  , dependencies = TRUE)
library(readxl)
installed.packages()
library(RSQLite)
library(DBI)
library(readr)
install.packages("tidyverse")
install.packages(readxl)
install.packages("readxl")
install.packages(“Rcpp")
install.packages("Rcpp")
install.packages("Rcpp")
install.packages("readxl")
install.packages("readxl")
install.packages("readxl")
shiny::runApp('Documents/repo_bitbucket/R_tw/baby_prediction/shiny')
runApp('Documents/repo_bitbucket/R_tw/baby_prediction/shiny')
runApp('Documents/repo_bitbucket/R_tw/baby_prediction/shiny')
runApp('Documents/repo_bitbucket/R_tw/baby_prediction/shiny')
library(tidyr)
library(dplyr)
library(RSQLite)
library(DBI)
library(readr)
library(ggplot2)
library(RColorBrewer)
library(DT)
dir1 <- "/home/aaaa/Documents/repo_bitbucket/R_tw/baby_prediction"
setwd(dir1)
dbname="tw_search_acount_baby.db"
driver=dbDriver("SQLite")
con1=dbConnect(driver,dbname)
#NULL値のものを取得
#timestampNull_1 <- dbGetQuery(con1, "SELECT * FROM search_keyword WHERE time_stamp IS NULL")
#NULL値のものに加え、time_stamp が古いものを優先
temp_df1 <- dbGetQuery(con1,
"SELECT * FROM search_acount")
dbDisconnect(con1)
temp_df1 <- temp_df1 %>%
filter(pregnancyFlag !=1)
sample_df1 <- sample_n(tbl = temp_df1, size = 1)
id_1 <- sample_df1$user_id
sample_df2 <- sample_df1 %>%
select(
screen_name,
description,
name,
name_past,
birth_1,
birth_2,
birth_3,
birth_4,
birth_5
)
output$table1 <- renderDataTable({sample_df2} ,  options = list(scrollX = TRUE  ))
dbname="tw_search_acount_baby.db"
driver=dbDriver("SQLite")
con2=dbConnect(driver,dbname)
#NULL値のものを取得
#timestampNull_1 <- dbGetQuery(con1, "SELECT * FROM search_keyword WHERE time_stamp IS NULL")
#NULL値のものに加え、time_stamp が古いものを優先
temp_df1 <- dbGetQuery(con2,
paste0("SELECT * WHERE user_id=", id_1 ,"FROM userAcount_tw")
dbDisconnect(con1)
library(tidyr)
library(dplyr)
library(RSQLite)
library(DBI)
library(readr)
library(ggplot2)
library(RColorBrewer)
library(DT)
dir1 <- "/home/aaaa/Documents/repo_bitbucket/R_tw/baby_prediction/db"
setwd(dir1)
dbname="tw_search_acount_baby.db"
driver=dbDriver("SQLite")
con1=dbConnect(driver,dbname)
#NULL値のものを取得
#timestampNull_1 <- dbGetQuery(con1, "SELECT * FROM search_keyword WHERE time_stamp IS NULL")
#NULL値のものに加え、time_stamp が古いものを優先
temp_df1 <- dbGetQuery(con1,
"SELECT * FROM search_acount")
dbDisconnect(con1)
temp_df1 <- temp_df1 %>%
filter(pregnancyFlag !=1)
sample_df1 <- sample_n(tbl = temp_df1, size = 1)
id_1 <- sample_df1$user_id
sample_df2 <- sample_df1 %>%
select(
screen_name,
description,
name,
name_past,
birth_1,
birth_2,
birth_3,
birth_4,
birth_5
)
output$table1 <- renderDataTable({sample_df2} ,  options = list(scrollX = TRUE  ))
dbname="tw_search_acount_baby.db"
driver=dbDriver("SQLite")
con2=dbConnect(driver,dbname)
#NULL値のものを取得
#timestampNull_1 <- dbGetQuery(con1, "SELECT * FROM search_keyword WHERE time_stamp IS NULL")
#NULL値のものに加え、time_stamp が古いものを優先
temp_df1 <- dbGetQuery(con2,
paste0("SELECT * WHERE user_id=", id_1 ,"FROM userAcount_tw")
dbDisconnect(con1)
user_tw1 <- temp_df1 %>%
select(
screen_name,
description,
name,
name_past,
birth_1,
birth_2,
birth_3,
birth_4,
birth_5
)
output$user_tw1 <- renderDataTable({user_tw1} ,  options = list(scrollX = TRUE  ))
id_1 <- sample_df1$user_id[1]
dbDisconnect(con2)
library(tidyr)
library(dplyr)
library(RSQLite)
library(DBI)
library(readr)
library(ggplot2)
library(RColorBrewer)
library(DT)
dir1 <- "/home/aaaa/Documents/repo_bitbucket/R_tw/baby_prediction/db"
setwd(dir1)
dbname="tw_search_acount_baby.db"
driver=dbDriver("SQLite")
con1=dbConnect(driver,dbname)
#NULL値のものを取得
#timestampNull_1 <- dbGetQuery(con1, "SELECT * FROM search_keyword WHERE time_stamp IS NULL")
#NULL値のものに加え、time_stamp が古いものを優先
temp_df1 <- dbGetQuery(con1,
"SELECT * FROM search_acount")
dbDisconnect(con1)
temp_df1 <- temp_df1 %>%
filter(pregnancyFlag !=1)
sample_df1 <- sample_n(tbl = temp_df1, size = 1)
id_1 <- sample_df1$user_id[1]
sample_df2 <- sample_df1 %>%
select(
screen_name,
description,
name,
name_past,
birth_1,
birth_2,
birth_3,
birth_4,
birth_5
)
output$table1 <- renderDataTable({sample_df2} ,  options = list(scrollX = TRUE  ))
dbname="tw_search_acount_baby.db"
driver=dbDriver("SQLite")
con2=dbConnect(driver,dbname)
#NULL値のものを取得
#timestampNull_1 <- dbGetQuery(con1, "SELECT * FROM search_keyword WHERE time_stamp IS NULL")
#NULL値のものに加え、time_stamp が古いものを優先
temp_df1 <- dbGetQuery(con2,
paste0("SELECT * WHERE user_id=", id_1 ,"FROM userAcount_tw")
dbDisconnect(con2)
user_tw1 <- temp_df1 %>%
select(
screen_name,
description,
name,
name_past,
birth_1,
birth_2,
birth_3,
birth_4,
birth_5
)
output$user_tw1 <- renderDataTable({user_tw1} ,  options = list(scrollX = TRUE  ))
paste0("SELECT * WHERE user_id=", id_1 ,"FROM userAcount_tw")
library(tidyr)
library(dplyr)
library(RSQLite)
library(DBI)
library(readr)
library(ggplot2)
library(RColorBrewer)
library(DT)
dir1 <- "/home/aaaa/Documents/repo_bitbucket/R_tw/baby_prediction/db"
setwd(dir1)
dbname="tw_search_acount_baby.db"
driver=dbDriver("SQLite")
con1=dbConnect(driver,dbname)
#NULL値のものを取得
#timestampNull_1 <- dbGetQuery(con1, "SELECT * FROM search_keyword WHERE time_stamp IS NULL")
#NULL値のものに加え、time_stamp が古いものを優先
temp_df1 <- dbGetQuery(con1,
"SELECT * FROM search_acount")
dbDisconnect(con1)
temp_df1 <- temp_df1 %>%
filter(pregnancyFlag !=1)
sample_df1 <- sample_n(tbl = temp_df1, size = 1)
id_1 <- sample_df1$user_id[1]
sample_df2 <- sample_df1 %>%
select(
screen_name,
description,
name,
name_past,
birth_1,
birth_2,
birth_3,
birth_4,
birth_5
)
output$table1 <- renderDataTable({sample_df2} ,  options = list(scrollX = TRUE  ))
dbname="tw_search_acount_baby.db"
driver=dbDriver("SQLite")
con2=dbConnect(driver,dbname)
#NULL値のものを取得
#timestampNull_1 <- dbGetQuery(con1, "SELECT * FROM search_keyword WHERE time_stamp IS NULL")
#NULL値のものに加え、time_stamp が古いものを優先
temp_df1 <- dbGetQuery(con2,
paste0("SELECT * WHERE user_id=", id_1 ," FROM userAcount_tw") )
dbDisconnect(con2)
user_tw1 <- temp_df1 %>%
select(
screen_name,
description,
name,
name_past,
birth_1,
birth_2,
birth_3,
birth_4,
birth_5
)
output$user_tw1 <- renderDataTable({user_tw1} ,  options = list(scrollX = TRUE  ))
dbname="tw_search_acount_baby.db"
driver=dbDriver("SQLite")
con2=dbConnect(driver,dbname)
#NULL値のものを取得
#timestampNull_1 <- dbGetQuery(con1, "SELECT * FROM search_keyword WHERE time_stamp IS NULL")
#NULL値のものに加え、time_stamp が古いものを優先
temp_df1 <- dbGetQuery(con2,
paste0("SELECT * WHERE user_id=", id_1 ," FROM userAcount_tw") )
dbDisconnect(con2)
user_tw1 <- temp_df1 %>%
select(
screen_name,
description,
name,
name_past,
birth_1,
birth_2,
birth_3,
birth_4,
birth_5
)
output$user_tw1 <- renderDataTable({user_tw1} ,  options = list(scrollX = TRUE  ))
g <- ggplot( sample_df1, aes( x = as.factor(deleteFlag),y = as.factor(name)  ))
#g <- g + theme_bw(base_family = "HiraKakuPro-W3")
g <- g +geom_tile(aes(fill = as.numeric( rowNum )  ))
g <- g +scale_fill_gradientn(colours = rev(brewer.pal(9, "Spectral")), na.value = "dodgerblue4")
g <- g +scale_x_discrete(expand = c(0, 0))
g <- g +scale_y_discrete(expand = c(0, 0))
g <- g +theme(axis.ticks = element_blank(),
axis.text.x = element_text(angle = 280, hjust = 0))
g <- g +theme(axis.title.x = element_blank(),
axis.title.y = element_blank() )
output$plot1 <- renderPlot({
g
})
}
dbname="tw_search_acount_baby.db"
driver=dbDriver("SQLite")
con2=dbConnect(driver,dbname)
#NULL値のものを取得
#timestampNull_1 <- dbGetQuery(con1, "SELECT * FROM search_keyword WHERE time_stamp IS NULL")
#NULL値のものに加え、time_stamp が古いものを優先
temp_df1 <- dbGetQuery(con2,
paste0("SELECT * WHERE user_id=", id_1 ," FROM userAcount_tw") )
dbDisconnect(con2)
dbname="tw_search_acount_baby.db"
driver=dbDriver("SQLite")
con2=dbConnect(driver,dbname)
#NULL値のものを取得
#timestampNull_1 <- dbGetQuery(con1, "SELECT * FROM search_keyword WHERE time_stamp IS NULL")
#NULL値のものに加え、time_stamp が古いものを優先
temp_df1 <- dbGetQuery(con2,
paste0("SELECT * FROM userAcount_tw WHERE user_id= ", id_1 ) )
dbDisconnect(con2)
user_tw1 <- temp_df1 %>%
select(
screen_name,
description,
name,
name_past,
birth_1,
birth_2,
birth_3,
birth_4,
birth_5
)
temp_df1
shiny::runApp('~/Documents/repo_bitbucket/R_tw/baby_prediction/shiny')
runApp('~/Documents/repo_bitbucket/R_tw/shiny')
